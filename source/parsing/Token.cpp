#include "Token.h"

Token::Token(TokenKind kind, int tokenNum, int tokenLine, string tokenString)
    :m_kind(kind),
     m_tokenString(tokenString)
{
    TL.m_tokenNum = tokenNum;
    TL.m_tokenLine = tokenLine;
    m_tokenkindStr = TokenKindtoString(kind);
}
Token::~Token(){
}
string Token::getTokenKindStr(){
    return m_tokenkindStr;
}
string Token::getTokenStr(){
    return m_tokenString;
}
TokenKind Token::getTokenKind(){
    return m_kind;
}
/*
string TokenKindtoString(TokenKind kind) {
    switch (kind) {
        case TokenKind::Unknown: return "Unknown";
        case TokenKind::EndOfFile: return "EndOfFile";
        case TokenKind::Identifier: return "Identifier";
        case TokenKind::SystemIdentifier: return "SystemIdentifier";
        case TokenKind::StringLiteral: return "StringLiteral";
        case TokenKind::IntegerLiteral: return "IntegerLiteral";
        case TokenKind::IntegerBase: return "IntegerBase";
        case TokenKind::UnbasedUnsizedLiteral: return "UnbasedUnsizedLiteral";
        case TokenKind::RealLiteral: return "RealLiteral";
        case TokenKind::TimeLiteral: return "TimeLiteral";
        case TokenKind::Placeholder: return "Placeholder";
        case TokenKind::Apostrophe: return "Apostrophe";
        case TokenKind::ApostropheOpenBrace: return "ApostropheOpenBrace";
        case TokenKind::OpenBrace: return "OpenBrace";
        case TokenKind::CloseBrace: return "CloseBrace";
        case TokenKind::OpenBracket: return "OpenBracket";
        case TokenKind::CloseBracket: return "CloseBracket";
        case TokenKind::OpenParenthesis: return "OpenParenthesis";
        case TokenKind::OpenParenthesisStar: return "OpenParenthesisStar";
        case TokenKind::CloseParenthesis: return "CloseParenthesis";
        case TokenKind::StarCloseParenthesis: return "StarCloseParenthesis";
        case TokenKind::Semicolon: return "Semicolon";
        case TokenKind::Colon: return "Colon";
        case TokenKind::ColonEquals: return "ColonEquals";
        case TokenKind::ColonSlash: return "ColonSlash";
        case TokenKind::DoubleColon: return "DoubleColon";
        case TokenKind::Comma: return "Comma";
        case TokenKind::DotStar: return "DotStar";
        case TokenKind::Dot: return "Dot";
        case TokenKind::Slash: return "Slash";
        case TokenKind::Star: return "Star";
        case TokenKind::DoubleStar: return "DoubleStar";
        case TokenKind::StarArrow: return "StarArrow";
        case TokenKind::Plus: return "Plus";
        case TokenKind::DoublePlus: return "DoublePlus";
        case TokenKind::PlusColon: return "PlusColon";
        case TokenKind::Minus: return "Minus";
        case TokenKind::DoubleMinus: return "DoubleMinus";
        case TokenKind::MinusColon: return "MinusColon";
        case TokenKind::MinusArrow: return "MinusArrow";
        case TokenKind::MinusDoubleArrow: return "MinusDoubleArrow";
        case TokenKind::Tilde: return "Tilde";
        case TokenKind::TildeAnd: return "TildeAnd";
        case TokenKind::TildeOr: return "TildeOr";
        case TokenKind::TildeXor: return "TildeXor";
        case TokenKind::Dollar: return "Dollar";
        case TokenKind::Question: return "Question";
        case TokenKind::Hash: return "Hash";
        case TokenKind::DoubleHash: return "DoubleHash";
        case TokenKind::HashMinusHash: return "HashMinusHash";
        case TokenKind::HashEqualsHash: return "HashEqualsHash";
        case TokenKind::Xor: return "Xor";
        case TokenKind::XorTilde: return "XorTilde";
        case TokenKind::Equals: return "Equals";
        case TokenKind::DoubleEquals: return "DoubleEquals";
        case TokenKind::DoubleEqualsQuestion: return "DoubleEqualsQuestion";
        case TokenKind::TripleEquals: return "TripleEquals";
        case TokenKind::EqualsArrow: return "EqualsArrow";
        case TokenKind::PlusEqual: return "PlusEqual";
        case TokenKind::MinusEqual: return "MinusEqual";
        case TokenKind::SlashEqual: return "SlashEqual";
        case TokenKind::StarEqual: return "StarEqual";
        case TokenKind::AndEqual: return "AndEqual";
        case TokenKind::OrEqual: return "OrEqual";
        case TokenKind::PercentEqual: return "PercentEqual";
        case TokenKind::XorEqual: return "XorEqual";
        case TokenKind::LeftShiftEqual: return "LeftShiftEqual";
        case TokenKind::TripleLeftShiftEqual: return "TripleLeftShiftEqual";
        case TokenKind::RightShiftEqual: return "RightShiftEqual";
        case TokenKind::TripleRightShiftEqual: return "TripleRightShiftEqual";
        case TokenKind::LeftShift: return "LeftShift";
        case TokenKind::RightShift: return "RightShift";
        case TokenKind::TripleLeftShift: return "TripleLeftShift";
        case TokenKind::TripleRightShift: return "TripleRightShift";
        case TokenKind::Exclamation: return "Exclamation";
        case TokenKind::ExclamationEquals: return "ExclamationEquals";
        case TokenKind::ExclamationEqualsQuestion: return "ExclamationEqualsQuestion";
        case TokenKind::ExclamationDoubleEquals: return "ExclamationDoubleEquals";
        case TokenKind::Percent: return "Percent";
        case TokenKind::LessThan: return "LessThan";
        case TokenKind::LessThanEquals: return "LessThanEquals";
        case TokenKind::LessThanMinusArrow: return "LessThanMinusArrow";
        case TokenKind::GreaterThan: return "GreaterThan";
        case TokenKind::GreaterThanEquals: return "GreaterThanEquals";
        case TokenKind::Or: return "Or";
        case TokenKind::DoubleOr: return "DoubleOr";
        case TokenKind::OrMinusArrow: return "OrMinusArrow";
        case TokenKind::OrEqualsArrow: return "OrEqualsArrow";
        case TokenKind::At: return "At";
        case TokenKind::DoubleAt: return "DoubleAt";
        case TokenKind::And: return "And";
        case TokenKind::DoubleAnd: return "DoubleAnd";
        case TokenKind::TripleAnd: return "TripleAnd";
        case TokenKind::OneStep: return "OneStep";
        case TokenKind::AcceptOnKeyword: return "AcceptOnKeyword";
        case TokenKind::AliasKeyword: return "AliasKeyword";
        case TokenKind::AlwaysKeyword: return "AlwaysKeyword";
        case TokenKind::AlwaysCombKeyword: return "AlwaysCombKeyword";
        case TokenKind::AlwaysFFKeyword: return "AlwaysFFKeyword";
        case TokenKind::AlwaysLatchKeyword: return "AlwaysLatchKeyword";
        case TokenKind::AndKeyword: return "AndKeyword";
        case TokenKind::AssertKeyword: return "AssertKeyword";
        case TokenKind::AssignKeyword: return "AssignKeyword";
        case TokenKind::AssumeKeyword: return "AssumeKeyword";
        case TokenKind::AutomaticKeyword: return "AutomaticKeyword";
        case TokenKind::BeforeKeyword: return "BeforeKeyword";
        case TokenKind::BeginKeyword: return "BeginKeyword";
        case TokenKind::BindKeyword: return "BindKeyword";
        case TokenKind::BinsKeyword: return "BinsKeyword";
        case TokenKind::BinsOfKeyword: return "BinsOfKeyword";
        case TokenKind::BitKeyword: return "BitKeyword";
        case TokenKind::BreakKeyword: return "BreakKeyword";
        case TokenKind::BufKeyword: return "BufKeyword";
        case TokenKind::BufIf0Keyword: return "BufIf0Keyword";
        case TokenKind::BufIf1Keyword: return "BufIf1Keyword";
        case TokenKind::ByteKeyword: return "ByteKeyword";
        case TokenKind::CaseKeyword: return "CaseKeyword";
        case TokenKind::CaseXKeyword: return "CaseXKeyword";
        case TokenKind::CaseZKeyword: return "CaseZKeyword";
        case TokenKind::CellKeyword: return "CellKeyword";
        case TokenKind::CHandleKeyword: return "CHandleKeyword";
        case TokenKind::CheckerKeyword: return "CheckerKeyword";
        case TokenKind::ClassKeyword: return "ClassKeyword";
        case TokenKind::ClockingKeyword: return "ClockingKeyword";
        case TokenKind::CmosKeyword: return "CmosKeyword";
        case TokenKind::ConfigKeyword: return "ConfigKeyword";
        case TokenKind::ConstKeyword: return "ConstKeyword";
        case TokenKind::ConstraintKeyword: return "ConstraintKeyword";
        case TokenKind::ContextKeyword: return "ContextKeyword";
        case TokenKind::ContinueKeyword: return "ContinueKeyword";
        case TokenKind::CoverKeyword: return "CoverKeyword";
        case TokenKind::CoverGroupKeyword: return "CoverGroupKeyword";
        case TokenKind::CoverPointKeyword: return "CoverPointKeyword";
        case TokenKind::CrossKeyword: return "CrossKeyword";
        case TokenKind::DeassignKeyword: return "DeassignKeyword";
        case TokenKind::DefaultKeyword: return "DefaultKeyword";
        case TokenKind::DefParamKeyword: return "DefParamKeyword";
        case TokenKind::DesignKeyword: return "DesignKeyword";
        case TokenKind::DisableKeyword: return "DisableKeyword";
        case TokenKind::DistKeyword: return "DistKeyword";
        case TokenKind::DoKeyword: return "DoKeyword";
        case TokenKind::EdgeKeyword: return "EdgeKeyword";
        case TokenKind::ElseKeyword: return "ElseKeyword";
        case TokenKind::EndKeyword: return "EndKeyword";
        case TokenKind::EndCaseKeyword: return "EndCaseKeyword";
        case TokenKind::EndCheckerKeyword: return "EndCheckerKeyword";
        case TokenKind::EndClassKeyword: return "EndClassKeyword";
        case TokenKind::EndClockingKeyword: return "EndClockingKeyword";
        case TokenKind::EndConfigKeyword: return "EndConfigKeyword";
        case TokenKind::EndFunctionKeyword: return "EndFunctionKeyword";
        case TokenKind::EndGenerateKeyword: return "EndGenerateKeyword";
        case TokenKind::EndGroupKeyword: return "EndGroupKeyword";
        case TokenKind::EndInterfaceKeyword: return "EndInterfaceKeyword";
        case TokenKind::EndModuleKeyword: return "EndModuleKeyword";
        case TokenKind::EndPackageKeyword: return "EndPackageKeyword";
        case TokenKind::EndPrimitiveKeyword: return "EndPrimitiveKeyword";
        case TokenKind::EndProgramKeyword: return "EndProgramKeyword";
        case TokenKind::EndPropertyKeyword: return "EndPropertyKeyword";
        case TokenKind::EndSpecifyKeyword: return "EndSpecifyKeyword";
        case TokenKind::EndSequenceKeyword: return "EndSequenceKeyword";
        case TokenKind::EndTableKeyword: return "EndTableKeyword";
        case TokenKind::EndTaskKeyword: return "EndTaskKeyword";
        case TokenKind::EnumKeyword: return "EnumKeyword";
        case TokenKind::EventKeyword: return "EventKeyword";
        case TokenKind::EventuallyKeyword: return "EventuallyKeyword";
        case TokenKind::ExpectKeyword: return "ExpectKeyword";
        case TokenKind::ExportKeyword: return "ExportKeyword";
        case TokenKind::ExtendsKeyword: return "ExtendsKeyword";
        case TokenKind::ExternKeyword: return "ExternKeyword";
        case TokenKind::FinalKeyword: return "FinalKeyword";
        case TokenKind::FirstMatchKeyword: return "FirstMatchKeyword";
        case TokenKind::ForKeyword: return "ForKeyword";
        case TokenKind::ForceKeyword: return "ForceKeyword";
        case TokenKind::ForeachKeyword: return "ForeachKeyword";
        case TokenKind::ForeverKeyword: return "ForeverKeyword";
        case TokenKind::ForkKeyword: return "ForkKeyword";
        case TokenKind::ForkJoinKeyword: return "ForkJoinKeyword";
        case TokenKind::FunctionKeyword: return "FunctionKeyword";
        case TokenKind::GenerateKeyword: return "GenerateKeyword";
        case TokenKind::GenVarKeyword: return "GenVarKeyword";
        case TokenKind::GlobalKeyword: return "GlobalKeyword";
        case TokenKind::HighZ0Keyword: return "HighZ0Keyword";
        case TokenKind::HighZ1Keyword: return "HighZ1Keyword";
        case TokenKind::IfKeyword: return "IfKeyword";
        case TokenKind::IffKeyword: return "IffKeyword";
        case TokenKind::IfNoneKeyword: return "IfNoneKeyword";
        case TokenKind::IgnoreBinsKeyword: return "IgnoreBinsKeyword";
        case TokenKind::IllegalBinsKeyword: return "IllegalBinsKeyword";
        case TokenKind::ImplementsKeyword: return "ImplementsKeyword";
        case TokenKind::ImpliesKeyword: return "ImpliesKeyword";
        case TokenKind::ImportKeyword: return "ImportKeyword";
        case TokenKind::IncDirKeyword: return "IncDirKeyword";
        case TokenKind::IncludeKeyword: return "IncludeKeyword";
        case TokenKind::InitialKeyword: return "InitialKeyword";
        case TokenKind::InOutKeyword: return "InOutKeyword";
        case TokenKind::InputKeyword: return "InputKeyword";
        case TokenKind::InsideKeyword: return "InsideKeyword";
        case TokenKind::InstanceKeyword: return "InstanceKeyword";
        case TokenKind::IntKeyword: return "IntKeyword";
        case TokenKind::IntegerKeyword: return "IntegerKeyword";
        case TokenKind::InterconnectKeyword: return "InterconnectKeyword";
        case TokenKind::InterfaceKeyword: return "InterfaceKeyword";
        case TokenKind::IntersectKeyword: return "IntersectKeyword";
        case TokenKind::JoinKeyword: return "JoinKeyword";
        case TokenKind::JoinAnyKeyword: return "JoinAnyKeyword";
        case TokenKind::JoinNoneKeyword: return "JoinNoneKeyword";
        case TokenKind::LargeKeyword: return "LargeKeyword";
        case TokenKind::LetKeyword: return "LetKeyword";
        case TokenKind::LibListKeyword: return "LibListKeyword";
        case TokenKind::LibraryKeyword: return "LibraryKeyword";
        case TokenKind::LocalKeyword: return "LocalKeyword";
        case TokenKind::LocalParamKeyword: return "LocalParamKeyword";
        case TokenKind::LogicKeyword: return "LogicKeyword";
        case TokenKind::LongIntKeyword: return "LongIntKeyword";
        case TokenKind::MacromoduleKeyword: return "MacromoduleKeyword";
        case TokenKind::MatchesKeyword: return "MatchesKeyword";
        case TokenKind::MediumKeyword: return "MediumKeyword";
        case TokenKind::ModPortKeyword: return "ModPortKeyword";
        case TokenKind::ModuleKeyword: return "ModuleKeyword";
        case TokenKind::NandKeyword: return "NandKeyword";
        case TokenKind::NegEdgeKeyword: return "NegEdgeKeyword";
        case TokenKind::NetTypeKeyword: return "NetTypeKeyword";
        case TokenKind::NewKeyword: return "NewKeyword";
        case TokenKind::NextTimeKeyword: return "NextTimeKeyword";
        case TokenKind::NmosKeyword: return "NmosKeyword";
        case TokenKind::NorKeyword: return "NorKeyword";
        case TokenKind::NoShowCancelledKeyword: return "NoShowCancelledKeyword";
        case TokenKind::NotKeyword: return "NotKeyword";
        case TokenKind::NotIf0Keyword: return "NotIf0Keyword";
        case TokenKind::NotIf1Keyword: return "NotIf1Keyword";
        case TokenKind::NullKeyword: return "NullKeyword";
        case TokenKind::OrKeyword: return "OrKeyword";
        case TokenKind::OutputKeyword: return "OutputKeyword";
        case TokenKind::PackageKeyword: return "PackageKeyword";
        case TokenKind::PackedKeyword: return "PackedKeyword";
        case TokenKind::ParameterKeyword: return "ParameterKeyword";
        case TokenKind::PmosKeyword: return "PmosKeyword";
        case TokenKind::PosEdgeKeyword: return "PosEdgeKeyword";
        case TokenKind::PrimitiveKeyword: return "PrimitiveKeyword";
        case TokenKind::PriorityKeyword: return "PriorityKeyword";
        case TokenKind::ProgramKeyword: return "ProgramKeyword";
        case TokenKind::PropertyKeyword: return "PropertyKeyword";
        case TokenKind::ProtectedKeyword: return "ProtectedKeyword";
        case TokenKind::Pull0Keyword: return "Pull0Keyword";
        case TokenKind::Pull1Keyword: return "Pull1Keyword";
        case TokenKind::PullDownKeyword: return "PullDownKeyword";
        case TokenKind::PullUpKeyword: return "PullUpKeyword";
        case TokenKind::PulseStyleOnDetectKeyword: return "PulseStyleOnDetectKeyword";
        case TokenKind::PulseStyleOnEventKeyword: return "PulseStyleOnEventKeyword";
        case TokenKind::PureKeyword: return "PureKeyword";
        case TokenKind::RandKeyword: return "RandKeyword";
        case TokenKind::RandCKeyword: return "RandCKeyword";
        case TokenKind::RandCaseKeyword: return "RandCaseKeyword";
        case TokenKind::RandSequenceKeyword: return "RandSequenceKeyword";
        case TokenKind::RcmosKeyword: return "RcmosKeyword";
        case TokenKind::RealKeyword: return "RealKeyword";
        case TokenKind::RealTimeKeyword: return "RealTimeKeyword";
        case TokenKind::RefKeyword: return "RefKeyword";
        case TokenKind::RegKeyword: return "RegKeyword";
        case TokenKind::RejectOnKeyword: return "RejectOnKeyword";
        case TokenKind::ReleaseKeyword: return "ReleaseKeyword";
        case TokenKind::RepeatKeyword: return "RepeatKeyword";
        case TokenKind::RestrictKeyword: return "RestrictKeyword";
        case TokenKind::ReturnKeyword: return "ReturnKeyword";
        case TokenKind::RnmosKeyword: return "RnmosKeyword";
        case TokenKind::RpmosKeyword: return "RpmosKeyword";
        case TokenKind::RtranKeyword: return "RtranKeyword";
        case TokenKind::RtranIf0Keyword: return "RtranIf0Keyword";
        case TokenKind::RtranIf1Keyword: return "RtranIf1Keyword";
        case TokenKind::SAlwaysKeyword: return "SAlwaysKeyword";
        case TokenKind::SEventuallyKeyword: return "SEventuallyKeyword";
        case TokenKind::SNextTimeKeyword: return "SNextTimeKeyword";
        case TokenKind::SUntilKeyword: return "SUntilKeyword";
        case TokenKind::SUntilWithKeyword: return "SUntilWithKeyword";
        case TokenKind::ScalaredKeyword: return "ScalaredKeyword";
        case TokenKind::SequenceKeyword: return "SequenceKeyword";
        case TokenKind::ShortIntKeyword: return "ShortIntKeyword";
        case TokenKind::ShortRealKeyword: return "ShortRealKeyword";
        case TokenKind::ShowCancelledKeyword: return "ShowCancelledKeyword";
        case TokenKind::SignedKeyword: return "SignedKeyword";
        case TokenKind::SmallKeyword: return "SmallKeyword";
        case TokenKind::SoftKeyword: return "SoftKeyword";
        case TokenKind::SolveKeyword: return "SolveKeyword";
        case TokenKind::SpecifyKeyword: return "SpecifyKeyword";
        case TokenKind::SpecParamKeyword: return "SpecParamKeyword";
        case TokenKind::StaticKeyword: return "StaticKeyword";
        case TokenKind::StringKeyword: return "StringKeyword";
        case TokenKind::StrongKeyword: return "StrongKeyword";
        case TokenKind::Strong0Keyword: return "Strong0Keyword";
        case TokenKind::Strong1Keyword: return "Strong1Keyword";
        case TokenKind::StructKeyword: return "StructKeyword";
        case TokenKind::SuperKeyword: return "SuperKeyword";
        case TokenKind::Supply0Keyword: return "Supply0Keyword";
        case TokenKind::Supply1Keyword: return "Supply1Keyword";
        case TokenKind::SyncAcceptOnKeyword: return "SyncAcceptOnKeyword";
        case TokenKind::SyncRejectOnKeyword: return "SyncRejectOnKeyword";
        case TokenKind::TableKeyword: return "TableKeyword";
        case TokenKind::TaggedKeyword: return "TaggedKeyword";
        case TokenKind::TaskKeyword: return "TaskKeyword";
        case TokenKind::ThisKeyword: return "ThisKeyword";
        case TokenKind::ThroughoutKeyword: return "ThroughoutKeyword";
        case TokenKind::TimeKeyword: return "TimeKeyword";
        case TokenKind::TimePrecisionKeyword: return "TimePrecisionKeyword";
        case TokenKind::TimeUnitKeyword: return "TimeUnitKeyword";
        case TokenKind::TranKeyword: return "TranKeyword";
        case TokenKind::TranIf0Keyword: return "TranIf0Keyword";
        case TokenKind::TranIf1Keyword: return "TranIf1Keyword";
        case TokenKind::TriKeyword: return "TriKeyword";
        case TokenKind::Tri0Keyword: return "Tri0Keyword";
        case TokenKind::Tri1Keyword: return "Tri1Keyword";
        case TokenKind::TriAndKeyword: return "TriAndKeyword";
        case TokenKind::TriOrKeyword: return "TriOrKeyword";
        case TokenKind::TriRegKeyword: return "TriRegKeyword";
        case TokenKind::TypeKeyword: return "TypeKeyword";
        case TokenKind::TypedefKeyword: return "TypedefKeyword";
        case TokenKind::UnionKeyword: return "UnionKeyword";
        case TokenKind::UniqueKeyword: return "UniqueKeyword";
        case TokenKind::Unique0Keyword: return "Unique0Keyword";
        case TokenKind::UnsignedKeyword: return "UnsignedKeyword";
        case TokenKind::VectoredKeyword: return "VectoredKeyword";
        case TokenKind::VirtualKeyword: return "VirtualKeyword";
        case TokenKind::VoidKeyword: return "VoidKeyword";
        case TokenKind::WaitKeyword: return "WaitKeyword";
        case TokenKind::WaitOrderKeyword: return "WaitOrderKeyword";
        case TokenKind::WAndKeyword: return "WAndKeyword";
        case TokenKind::WeakKeyword: return "WeakKeyword";
        case TokenKind::Weak0Keyword: return "Weak0Keyword";
        case TokenKind::Weak1Keyword: return "Weak1Keyword";
        case TokenKind::WhileKeyword: return "WhileKeyword";
        case TokenKind::WildcardKeyword: return "WildcardKeyword";
        case TokenKind::WireKeyword: return "WireKeyword";
        case TokenKind::WithKeyword: return "WithKeyword";
        case TokenKind::WithinKeyword: return "WithinKeyword";
        case TokenKind::WOrKeyword: return "WOrKeyword";
        case TokenKind::XnorKeyword: return "XnorKeyword";
        case TokenKind::XorKeyword: return "XorKeyword";
        case TokenKind::DefineKeyword: return "DefineKeyword";
        case TokenKind::UnitSystemName: return "UnitSystemName";
        case TokenKind::RootSystemName: return "RootSystemName";
        case TokenKind::Directive: return "Directive";
        case TokenKind::IncludeFileName: return "IncludeFileName";
        case TokenKind::MacroUsage: return "MacroUsage";
        case TokenKind::MacroQuote: return "MacroQuote";
        case TokenKind::MacroEscapedQuote: return "MacroEscapedQuote";
        case TokenKind::MacroPaste: return "MacroPaste";
        case TokenKind::EmptyMacroArgument: return "EmptyMacroArgument";
        case TokenKind::LineContinuation: return "LineContinuation";
        default: return "";
    }
}
*/
 string TokenKindtoString(TokenKind kind) {
   switch (kind) {
    case TokenKind::Unknown: return "Unknown";
    case TokenKind::EndOfFile: return "EndOfFile";
    case TokenKind::Identifier: return "Identifier";
    case TokenKind::SystemIdentifier: return "SystemIdentifier";
    case TokenKind::StringLiteral: return "StringLiteral";
    case TokenKind::IntegerLiteral: return "IntegerLiteral";
    case TokenKind::IntegerBase: return "IntegerBase";
    case TokenKind::UnbasedUnsizedLiteral: return "UnbasedUnsizedLiteral";
    case TokenKind::RealLiteral: return "RealLiteral";
    case TokenKind::TimeLiteral: return "TimeLiteral";
    case TokenKind::Placeholder: return "Placeholder";
    case TokenKind::Apostrophe: return "Apostrophe";
    case TokenKind::ApostropheOpenBrace: return "ApostropheOpenBrace";
    case TokenKind::OpenBrace: return "OpenBrace";
    case TokenKind::CloseBrace: return "CloseBrace";
    case TokenKind::OpenBracket: return "OpenBracket";
    case TokenKind::CloseBracket: return "CloseBracket";
    case TokenKind::OpenParenthesis: return "OpenParenthesis";
    case TokenKind::OpenParenthesisStar: return "OpenParenthesisStar";
    case TokenKind::CloseParenthesis: return "CloseParenthesis";
    case TokenKind::StarCloseParenthesis: return "StarCloseParenthesis";
    case TokenKind::Semicolon: return "Semicolon";
    case TokenKind::Colon: return "Colon";
    case TokenKind::ColonEquals: return "ColonEquals";
    case TokenKind::ColonSlash: return "ColonSlash";
    case TokenKind::DoubleColon: return "DoubleColon";
    case TokenKind::Comma: return "Comma";
    case TokenKind::DotStar: return "DotStar";
    case TokenKind::Dot: return "Dot";
    case TokenKind::Slash: return "Slash";
    case TokenKind::Star: return "Star";
    case TokenKind::DoubleStar: return "DoubleStar";
    case TokenKind::StarArrow: return "StarArrow";
    case TokenKind::Plus: return "Plus";
    case TokenKind::DoublePlus: return "DoublePlus";
    case TokenKind::PlusColon: return "PlusColon";
    case TokenKind::Minus: return "Minus";
    case TokenKind::DoubleMinus: return "DoubleMinus";
    case TokenKind::MinusColon: return "MinusColon";
    case TokenKind::MinusArrow: return "MinusArrow";
    case TokenKind::MinusDoubleArrow: return "MinusDoubleArrow";
    case TokenKind::Tilde: return "Tilde";
    case TokenKind::TildeAnd: return "TildeAnd";
    case TokenKind::TildeOr: return "TildeOr";
    case TokenKind::TildeXor: return "TildeXor";
    case TokenKind::Dollar: return "Dollar";
    case TokenKind::Question: return "Question";
    case TokenKind::Hash: return "Hash";
    case TokenKind::DoubleHash: return "DoubleHash";
    case TokenKind::HashMinusHash: return "HashMinusHash";
    case TokenKind::HashEqualsHash: return "HashEqualsHash";
    case TokenKind::XorTilde: return "XorTilde";
    case TokenKind::Equals: return "Equals";
    case TokenKind::DoubleEquals: return "DoubleEquals";
    case TokenKind::DoubleEqualsQuestion: return "DoubleEqualsQuestion";
    case TokenKind::TripleEquals: return "TripleEquals";
    case TokenKind::EqualsArrow: return "EqualsArrow";
    case TokenKind::PlusEqual: return "PlusEqual";
    case TokenKind::MinusEqual: return "MinusEqual";
    case TokenKind::SlashEqual: return "SlashEqual";
    case TokenKind::StarEqual: return "StarEqual";
    case TokenKind::AndEqual: return "AndEqual";
    case TokenKind::OrEqual: return "OrEqual";
    case TokenKind::PercentEqual: return "PercentEqual";
    case TokenKind::XorEqual: return "XorEqual";
    case TokenKind::LeftShiftEqual: return "LeftShiftEqual";
    case TokenKind::TripleLeftShiftEqual: return "TripleLeftShiftEqual";
    case TokenKind::RightShiftEqual: return "RightShiftEqual";
    case TokenKind::TripleRightShiftEqual: return "TripleRightShiftEqual";
    case TokenKind::LeftShift: return "LeftShift";
    case TokenKind::RightShift: return "RightShift";
    case TokenKind::TripleLeftShift: return "TripleLeftShift";
    case TokenKind::TripleRightShift: return "TripleRightShift";
    case TokenKind::Exclamation: return "Exclamation";
    case TokenKind::ExclamationEquals: return "ExclamationEquals";
    case TokenKind::ExclamationEqualsQuestion: return "ExclamationEqualsQuestion";
    case TokenKind::ExclamationDoubleEquals: return "ExclamationDoubleEquals";
    case TokenKind::Percent: return "Percent";
    case TokenKind::LessThan: return "LessThan";
    case TokenKind::LessThanEquals: return "LessThanEquals";
    case TokenKind::LessThanMinusArrow: return "LessThanMinusArrow";
    case TokenKind::GreaterThan: return "GreaterThan";
    case TokenKind::GreaterThanEquals: return "GreaterThanEquals";
    case TokenKind::Or: return "Or";
    case TokenKind::DoubleOr: return "DoubleOr";
    case TokenKind::OrMinusArrow: return "OrMinusArrow";
    case TokenKind::OrEqualsArrow: return "OrEqualsArrow";
    case TokenKind::At: return "At";
    case TokenKind::DoubleAt: return "DoubleAt";
    case TokenKind::And: return "And";
    case TokenKind::DoubleAnd: return "DoubleAnd";
    case TokenKind::TripleAnd: return "TripleAnd";
    case TokenKind::OneStep: return "OneStep";
    case TokenKind::AcceptOnKeyword: return "AcceptOnKeyword";
    case TokenKind::AliasKeyword: return "AliasKeyword";
    case TokenKind::AlwaysKeyword: return "AlwaysKeyword";
    case TokenKind::AlwaysCombKeyword: return "AlwaysCombKeyword";
    case TokenKind::AlwaysFFKeyword: return "AlwaysFFKeyword";
    case TokenKind::AlwaysLatchKeyword: return "AlwaysLatchKeyword";
    case TokenKind::AndKeyword: return "AndKeyword";
    case TokenKind::AssertKeyword: return "AssertKeyword";
    case TokenKind::AssignKeyword: return "AssignKeyword";
    case TokenKind::AssumeKeyword: return "AssumeKeyword";
    case TokenKind::AutomaticKeyword: return "AutomaticKeyword";
    case TokenKind::BeforeKeyword: return "BeforeKeyword";
    case TokenKind::BeginKeyword: return "BeginKeyword";
    case TokenKind::BindKeyword: return "BindKeyword";
    case TokenKind::BinsKeyword: return "BinsKeyword";
    case TokenKind::BinsOfKeyword: return "BinsOfKeyword";
    case TokenKind::BitKeyword: return "BitKeyword";
    case TokenKind::BreakKeyword: return "BreakKeyword";
    case TokenKind::BufKeyword: return "BufKeyword";
    case TokenKind::BufIf0Keyword: return "BufIf0Keyword";
    case TokenKind::BufIf1Keyword: return "BufIf1Keyword";
    case TokenKind::ByteKeyword: return "ByteKeyword";
    case TokenKind::CaseKeyword: return "CaseKeyword";
    case TokenKind::CaseXKeyword: return "CaseXKeyword";
    case TokenKind::CaseZKeyword: return "CaseZKeyword";
    case TokenKind::CellKeyword: return "CellKeyword";
    case TokenKind::CHandleKeyword: return "CHandleKeyword";
    case TokenKind::CheckerKeyword: return "CheckerKeyword";
    case TokenKind::ClassKeyword: return "ClassKeyword";
    case TokenKind::ClockingKeyword: return "ClockingKeyword";
    case TokenKind::CmosKeyword: return "CmosKeyword";
    case TokenKind::ConfigKeyword: return "ConfigKeyword";
    case TokenKind::ConstKeyword: return "ConstKeyword";
    case TokenKind::ConstraintKeyword: return "ConstraintKeyword";
    case TokenKind::ContextKeyword: return "ContextKeyword";
    case TokenKind::ContinueKeyword: return "ContinueKeyword";
    case TokenKind::CoverKeyword: return "CoverKeyword";
    case TokenKind::CoverGroupKeyword: return "CoverGroupKeyword";
    case TokenKind::CoverPointKeyword: return "CoverPointKeyword";
    case TokenKind::CrossKeyword: return "CrossKeyword";
    case TokenKind::DeassignKeyword: return "DeassignKeyword";
    case TokenKind::DefaultKeyword: return "DefaultKeyword";
    case TokenKind::DefParamKeyword: return "DefParamKeyword";
    case TokenKind::DesignKeyword: return "DesignKeyword";
    case TokenKind::DisableKeyword: return "DisableKeyword";
    case TokenKind::DistKeyword: return "DistKeyword";
    case TokenKind::DoKeyword: return "DoKeyword";
    case TokenKind::EdgeKeyword: return "EdgeKeyword";
    case TokenKind::ElseKeyword: return "ElseKeyword";
    case TokenKind::EndKeyword: return "EndKeyword";
    case TokenKind::EndCaseKeyword: return "EndCaseKeyword";
    case TokenKind::EndCheckerKeyword: return "EndCheckerKeyword";
    case TokenKind::EndClassKeyword: return "EndClassKeyword";
    case TokenKind::EndClockingKeyword: return "EndClockingKeyword";
    case TokenKind::EndConfigKeyword: return "EndConfigKeyword";
    case TokenKind::EndFunctionKeyword: return "EndFunctionKeyword";
    case TokenKind::EndGenerateKeyword: return "EndGenerateKeyword";
    case TokenKind::EndGroupKeyword: return "EndGroupKeyword";
    case TokenKind::EndInterfaceKeyword: return "EndInterfaceKeyword";
    case TokenKind::EndModuleKeyword: return "EndModuleKeyword";
    case TokenKind::EndPackageKeyword: return "EndPackageKeyword";
    case TokenKind::EndPrimitiveKeyword: return "EndPrimitiveKeyword";
    case TokenKind::EndProgramKeyword: return "EndProgramKeyword";
    case TokenKind::EndPropertyKeyword: return "EndPropertyKeyword";
    case TokenKind::EndSpecifyKeyword: return "EndSpecifyKeyword";
    case TokenKind::EndSequenceKeyword: return "EndSequenceKeyword";
    case TokenKind::EndTableKeyword: return "EndTableKeyword";
    case TokenKind::EndTaskKeyword: return "EndTaskKeyword";
    case TokenKind::EnumKeyword: return "EnumKeyword";
    case TokenKind::EventKeyword: return "EventKeyword";
    case TokenKind::EventuallyKeyword: return "EventuallyKeyword";
    case TokenKind::ExpectKeyword: return "ExpectKeyword";
    case TokenKind::ExportKeyword: return "ExportKeyword";
    case TokenKind::ExtendsKeyword: return "ExtendsKeyword";
    case TokenKind::ExternKeyword: return "ExternKeyword";
    case TokenKind::FinalKeyword: return "FinalKeyword";
    case TokenKind::FirstMatchKeyword: return "FirstMatchKeyword";
    case TokenKind::ForKeyword: return "ForKeyword";
    case TokenKind::ForceKeyword: return "ForceKeyword";
    case TokenKind::ForeachKeyword: return "ForeachKeyword";
    case TokenKind::ForeverKeyword: return "ForeverKeyword";
    case TokenKind::ForkKeyword: return "ForkKeyword";
    case TokenKind::ForkJoinKeyword: return "ForkJoinKeyword";
    case TokenKind::FunctionKeyword: return "FunctionKeyword";
    case TokenKind::GenerateKeyword: return "GenerateKeyword";
    case TokenKind::GenVarKeyword: return "GenVarKeyword";
    case TokenKind::GlobalKeyword: return "GlobalKeyword";
    case TokenKind::HighZ0Keyword: return "HighZ0Keyword";
    case TokenKind::HighZ1Keyword: return "HighZ1Keyword";
    case TokenKind::IfKeyword: return "IfKeyword";
    case TokenKind::IffKeyword: return "IffKeyword";
    case TokenKind::IfNoneKeyword: return "IfNoneKeyword";
    case TokenKind::IgnoreBinsKeyword: return "IgnoreBinsKeyword";
    case TokenKind::IllegalBinsKeyword: return "IllegalBinsKeyword";
    case TokenKind::ImplementsKeyword: return "ImplementsKeyword";
    case TokenKind::ImpliesKeyword: return "ImpliesKeyword";
    case TokenKind::ImportKeyword: return "ImportKeyword";
    case TokenKind::IncDirKeyword: return "IncDirKeyword";
    case TokenKind::IncludeKeyword: return "IncludeKeyword";
    case TokenKind::InitialKeyword: return "InitialKeyword";
    case TokenKind::InOutKeyword: return "InOutKeyword";
    case TokenKind::InputKeyword: return "InputKeyword";
    case TokenKind::InsideKeyword: return "InsideKeyword";
    case TokenKind::InstanceKeyword: return "InstanceKeyword";
    case TokenKind::IntKeyword: return "IntKeyword";
    case TokenKind::IntegerKeyword: return "IntegerKeyword";
    case TokenKind::InterconnectKeyword: return "InterconnectKeyword";
    case TokenKind::InterfaceKeyword: return "InterfaceKeyword";
    case TokenKind::IntersectKeyword: return "IntersectKeyword";
    case TokenKind::JoinKeyword: return "JoinKeyword";
    case TokenKind::JoinAnyKeyword: return "JoinAnyKeyword";
    case TokenKind::JoinNoneKeyword: return "JoinNoneKeyword";
    case TokenKind::LargeKeyword: return "LargeKeyword";
    case TokenKind::LetKeyword: return "LetKeyword";
    case TokenKind::LibListKeyword: return "LibListKeyword";
    case TokenKind::LibraryKeyword: return "LibraryKeyword";
    case TokenKind::LocalKeyword: return "LocalKeyword";
    case TokenKind::LocalParamKeyword: return "LocalParamKeyword";
    case TokenKind::LogicKeyword: return "LogicKeyword";
    case TokenKind::LongIntKeyword: return "LongIntKeyword";
    case TokenKind::MacromoduleKeyword: return "MacromoduleKeyword";
    case TokenKind::MatchesKeyword: return "MatchesKeyword";
    case TokenKind::MediumKeyword: return "MediumKeyword";
    case TokenKind::ModPortKeyword: return "ModPortKeyword";
    case TokenKind::ModuleKeyword: return "ModuleKeyword";
    case TokenKind::NandKeyword: return "NandKeyword";
    case TokenKind::NegEdgeKeyword: return "NegEdgeKeyword";
    case TokenKind::NetTypeKeyword: return "NetTypeKeyword";
    case TokenKind::NewKeyword: return "NewKeyword";
    case TokenKind::NextTimeKeyword: return "NextTimeKeyword";
    case TokenKind::NmosKeyword: return "NmosKeyword";
    case TokenKind::NorKeyword: return "NorKeyword";
    case TokenKind::NoShowCancelledKeyword: return "NoShowCancelledKeyword";
    case TokenKind::NotKeyword: return "NotKeyword";
    case TokenKind::NotIf0Keyword: return "NotIf0Keyword";
    case TokenKind::NotIf1Keyword: return "NotIf1Keyword";
    case TokenKind::NullKeyword: return "NullKeyword";
    case TokenKind::OrKeyword: return "OrKeyword";
    case TokenKind::OutputKeyword: return "OutputKeyword";
    case TokenKind::PackageKeyword: return "PackageKeyword";
    case TokenKind::PackedKeyword: return "PackedKeyword";
    case TokenKind::ParameterKeyword: return "ParameterKeyword";
    case TokenKind::PmosKeyword: return "PmosKeyword";
    case TokenKind::PosEdgeKeyword: return "PosEdgeKeyword";
    case TokenKind::PrimitiveKeyword: return "PrimitiveKeyword";
    case TokenKind::PriorityKeyword: return "PriorityKeyword";
    case TokenKind::ProgramKeyword: return "ProgramKeyword";
    case TokenKind::PropertyKeyword: return "PropertyKeyword";
    case TokenKind::ProtectedKeyword: return "ProtectedKeyword";
    case TokenKind::Pull0Keyword: return "Pull0Keyword";
    case TokenKind::Pull1Keyword: return "Pull1Keyword";
    case TokenKind::PullDownKeyword: return "PullDownKeyword";
    case TokenKind::PullUpKeyword: return "PullUpKeyword";
    case TokenKind::PulseStyleOnDetectKeyword: return "PulseStyleOnDetectKeyword";
    case TokenKind::PulseStyleOnEventKeyword: return "PulseStyleOnEventKeyword";
    case TokenKind::PureKeyword: return "PureKeyword";
    case TokenKind::RandKeyword: return "RandKeyword";
    case TokenKind::RandCKeyword: return "RandCKeyword";
    case TokenKind::RandCaseKeyword: return "RandCaseKeyword";
    case TokenKind::RandSequenceKeyword: return "RandSequenceKeyword";
    case TokenKind::RcmosKeyword: return "RcmosKeyword";
    case TokenKind::RealKeyword: return "RealKeyword";
    case TokenKind::RealTimeKeyword: return "RealTimeKeyword";
    case TokenKind::RefKeyword: return "RefKeyword";
    case TokenKind::RegKeyword: return "RegKeyword";
    case TokenKind::RejectOnKeyword: return "RejectOnKeyword";
    case TokenKind::ReleaseKeyword: return "ReleaseKeyword";
    case TokenKind::RepeatKeyword: return "RepeatKeyword";
    case TokenKind::RestrictKeyword: return "RestrictKeyword";
    case TokenKind::ReturnKeyword: return "ReturnKeyword";
    case TokenKind::RnmosKeyword: return "RnmosKeyword";
    case TokenKind::RpmosKeyword: return "RpmosKeyword";
    case TokenKind::RtranKeyword: return "RtranKeyword";
    case TokenKind::RtranIf0Keyword: return "RtranIf0Keyword";
    case TokenKind::RtranIf1Keyword: return "RtranIf1Keyword";
    case TokenKind::SAlwaysKeyword: return "SAlwaysKeyword";
    case TokenKind::SEventuallyKeyword: return "SEventuallyKeyword";
    case TokenKind::SNextTimeKeyword: return "SNextTimeKeyword";
    case TokenKind::SUntilKeyword: return "SUntilKeyword";
    case TokenKind::SUntilWithKeyword: return "SUntilWithKeyword";
    case TokenKind::ScalaredKeyword: return "ScalaredKeyword";
    case TokenKind::SequenceKeyword: return "SequenceKeyword";
    case TokenKind::ShortIntKeyword: return "ShortIntKeyword";
    case TokenKind::ShortRealKeyword: return "ShortRealKeyword";
    case TokenKind::ShowCancelledKeyword: return "ShowCancelledKeyword";
    case TokenKind::SignedKeyword: return "SignedKeyword";
    case TokenKind::SmallKeyword: return "SmallKeyword";
    case TokenKind::SoftKeyword: return "SoftKeyword";
    case TokenKind::SolveKeyword: return "SolveKeyword";
    case TokenKind::SpecifyKeyword: return "SpecifyKeyword";
    case TokenKind::SpecParamKeyword: return "SpecParamKeyword";
    case TokenKind::StaticKeyword: return "StaticKeyword";
    case TokenKind::StringKeyword: return "StringKeyword";
    case TokenKind::StrongKeyword: return "StrongKeyword";
    case TokenKind::Strong0Keyword: return "Strong0Keyword";
    case TokenKind::Strong1Keyword: return "Strong1Keyword";
    case TokenKind::StructKeyword: return "StructKeyword";
    case TokenKind::SuperKeyword: return "SuperKeyword";
    case TokenKind::Supply0Keyword: return "Supply0Keyword";
    case TokenKind::Supply1Keyword: return "Supply1Keyword";
    case TokenKind::SyncAcceptOnKeyword: return "SyncAcceptOnKeyword";
    case TokenKind::SyncRejectOnKeyword: return "SyncRejectOnKeyword";
    case TokenKind::TableKeyword: return "TableKeyword";
    case TokenKind::TaggedKeyword: return "TaggedKeyword";
    case TokenKind::TaskKeyword: return "TaskKeyword";
    case TokenKind::ThisKeyword: return "ThisKeyword";
    case TokenKind::ThroughoutKeyword: return "ThroughoutKeyword";
    case TokenKind::TimeKeyword: return "TimeKeyword";
    case TokenKind::TimePrecisionKeyword: return "TimePrecisionKeyword";
    case TokenKind::TimeUnitKeyword: return "TimeUnitKeyword";
    case TokenKind::TranKeyword: return "TranKeyword";
    case TokenKind::TranIf0Keyword: return "TranIf0Keyword";
    case TokenKind::TranIf1Keyword: return "TranIf1Keyword";
    case TokenKind::TriKeyword: return "TriKeyword";
    case TokenKind::Tri0Keyword: return "Tri0Keyword";
    case TokenKind::Tri1Keyword: return "Tri1Keyword";
    case TokenKind::TriAndKeyword: return "TriAndKeyword";
    case TokenKind::TriOrKeyword: return "TriOrKeyword";
    case TokenKind::TriRegKeyword: return "TriRegKeyword";
    case TokenKind::TypeKeyword: return "TypeKeyword";
    case TokenKind::TypedefKeyword: return "TypedefKeyword";
    case TokenKind::UnionKeyword: return "UnionKeyword";
    case TokenKind::UniqueKeyword: return "UniqueKeyword";
    case TokenKind::Unique0Keyword: return "Unique0Keyword";
    case TokenKind::UnsignedKeyword: return "UnsignedKeyword";
    case TokenKind::VectoredKeyword: return "VectoredKeyword";
    case TokenKind::VirtualKeyword: return "VirtualKeyword";
    case TokenKind::VoidKeyword: return "VoidKeyword";
    case TokenKind::WaitKeyword: return "WaitKeyword";
    case TokenKind::WaitOrderKeyword: return "WaitOrderKeyword";
    case TokenKind::WAndKeyword: return "WAndKeyword";
    case TokenKind::WeakKeyword: return "WeakKeyword";
    case TokenKind::Weak0Keyword: return "Weak0Keyword";
    case TokenKind::Weak1Keyword: return "Weak1Keyword";
    case TokenKind::WhileKeyword: return "WhileKeyword";
    case TokenKind::WildcardKeyword: return "WildcardKeyword";
    case TokenKind::WireKeyword: return "WireKeyword";
    case TokenKind::WithKeyword: return "WithKeyword";
    case TokenKind::WithinKeyword: return "WithinKeyword";
    case TokenKind::WOrKeyword: return "WOrKeyword";
    case TokenKind::XnorKeyword: return "XnorKeyword";
    case TokenKind::XorKeyword: return "XorKeyword";
    case TokenKind::UnitSystemName: return "UnitSystemName";
    case TokenKind::RootSystemName: return "RootSystemName";
    case TokenKind::Directive: return "Directive";
    case TokenKind::IncludeFileName: return "IncludeFileName";
    case TokenKind::MacroUsage: return "MacroUsage";
    case TokenKind::MacroQuote: return "MacroQuote";
    case TokenKind::MacroEscapedQuote: return "MacroEscapedQuote";
    case TokenKind::MacroPaste: return "MacroPaste";
    case TokenKind::EmptyMacroArgument: return "EmptyMacroArgument";
    case TokenKind::LineContinuation: return "LineContinuation";
    case TokenKind::AlignasKeyword:return "AlignasKeyword";
    case TokenKind::AlignofKeyword:return "AlignofKeyword";
    case TokenKind::And_eqKeyword:return "And_eqKeyword";
    case TokenKind::AsmKeyword:return "AsmKeyword";
    case TokenKind::Atomic_cancelKeyword:return "Atomic_cancelKeyword";
    case TokenKind::Atomic_commitKeyword:return "Atomic_commitKeyword";
    case TokenKind::Atomic_noexceptKeyword:return "Atomic_noexceptKeyword";
    case TokenKind::AutoKeyword:return "AutoKeyword";
    case TokenKind::BitandKeyword:return "BitandKeyword";
    case TokenKind::BitorKeyword:return "BitorKeyword";
    case TokenKind::BoolKeyword:return "BoolKeyword";
    case TokenKind::CatchKeyword:return "CatchKeyword";
    case TokenKind::CharKeyword:return "CharKeyword";
    case TokenKind::Char8_tKeyword:return "Char8_tKeyword";
    case TokenKind::Char16_tKeyword:return "Char16_tKeyword";
    case TokenKind::Char32_tKeyword:return "Char32_tKeyword";
    case TokenKind::Co_awaitKeyword:return "Co_awaitKeyword";
    case TokenKind::Co_returnKeyword:return "Co_returnKeyword";
    case TokenKind::Co_yieldKeyword:return "Co_yieldKeyword";
    case TokenKind::ComplementKeyword:return "ComplementKeyword";
    case TokenKind::ConceptKeyword:return "ConceptKeyword";
    case TokenKind::ConstevalKeyword:return "ConstevalKeyword";
    case TokenKind::ConstexprKeyword:return "ConstexprKeyword";
    case TokenKind::Const_castKeyword:return "Const_castKeyword";
    case TokenKind::DecltypeKeyword:return "DecltypeKeyword";
    case TokenKind::DeleteKeyword:return "DeleteKeyword";
    case TokenKind::DoubleKeyword:return "DoubleKeyword";
    case TokenKind::Dynamic_castKeyword:return "Dynamic_castKeyword";
    case TokenKind::ExplicitKeyword:return "ExplicitKeyword";
    case TokenKind::FalseKeyword:return "FalseKeyword";
    case TokenKind::FloatKeyword:return "FloatKeyword";
    case TokenKind::FriendKeyword:return "FriendKeyword";
    case TokenKind::GotoKeyword:return "GotoKeyword";
    case TokenKind::InlineKeyword:return "InlineKeyword";
    case TokenKind::LongKeyword:return "LongKeyword";
    case TokenKind::MutableKeyword:return "MutableKeyword";
    case TokenKind::NamespaceKeyword:return "NamespaceKeyword";
    case TokenKind::NoexceptKeyword:return "NoexceptKeyword";
    case TokenKind::Not_eqKeyword:return "Not_eqKeyword";
    case TokenKind::NullptrKeyword:return "NullptrKeyword";
    case TokenKind::OperatorKeyword:return "OperatorKeyword";
    case TokenKind::Or_eqKeyword:return "Or_eqKeyword";
    case TokenKind::PrivateKeyword:return "PrivateKeyword";
    case TokenKind::PublicKeyword:return "PublicKeyword";
    case TokenKind::ReflexprKeyword:return "ReflexprKeyword";
    case TokenKind::RegisterKeyword:return "RegisterKeyword";
    case TokenKind::Reinterpret_castKeyword:return "Reinterpret_castKeyword";
    case TokenKind::RequiresKeyword:return "RequiresKeyword";
    case TokenKind::ShortKeyword:return "ShortKeyword";
    case TokenKind::SizeofKeyword:return "SizeofKeyword";
    case TokenKind::Static_assertKeyword:return "Static_assertKeyword";
    case TokenKind::Static_castKeyword:return "Static_castKeyword";
    case TokenKind::SwitchKeyword:return "SwitchKeyword";
    case TokenKind::SynchronizedKeyword:return "SynchronizedKeyword";
    case TokenKind::TemplateKeyword:return "TemplateKeyword";
    case TokenKind::Thread_localKeyword:return "Thread_localKeyword";
    case TokenKind::ThrowKeyword:return "ThrowKeyword";
    case TokenKind::TrueKeyword:return "TrueKeyword";
    case TokenKind::TryKeyword:return "TryKeyword";
    case TokenKind::TypeidKeyword:return "TypeidKeyword";
    case TokenKind::TypenameKeyword:return "TypenameKeyword";
    case TokenKind::UsingKeyword:return "UsingKeyword";
    case TokenKind::VolatileKeyword:return "VolatileKeyword";
    case TokenKind::Wchar_tKeyword:return "Wchar_tKeyword";
    case TokenKind::Xor_eqKeyword:return "Xor_eqKeyword";
    case TokenKind::AllocatorKeyword:return "AllocatorKeyword";
    case TokenKind::ArrayKeyword:return "ArrayKeyword";
    case TokenKind::AtomicKeyword:return "AtomicKeyword";
    case TokenKind::BoolalphaKeyword:return "BoolalphaKeyword";
    case TokenKind::ChronoKeyword:return "ChronoKeyword";
    case TokenKind::CinKeyword:return "CinKeyword";
    case TokenKind::ClearerrKeyword:return "ClearerrKeyword";
    case TokenKind::ClockKeyword:return "ClockKeyword";
    case TokenKind::Condition_variableKeyword:return "Condition_variableKeyword";
    case TokenKind::CoutKeyword:return "CoutKeyword";
    case TokenKind::CerrKeyword:return "CerrKeyword";
    case TokenKind::ClogKeyword:return "ClogKeyword";
    case TokenKind::ComplexKeyword:return "ComplexKeyword";
    case TokenKind::Condition_variable_anyKeyword:return "Condition_variable_anyKeyword";
    case TokenKind::DequeKeyword:return "DequeKeyword";
    case TokenKind::Dynamic_pointer_castKeyword:return "Dynamic_pointer_castKeyword";
    case TokenKind::Enable_ifKeyword:return "Enable_ifKeyword";
    case TokenKind::EndlKeyword:return "EndlKeyword";
    case TokenKind::Exception_ptrKeyword:return "Exception_ptrKeyword";
    case TokenKind::FilebufKeyword:return "FilebufKeyword";
    case TokenKind::FstreamKeyword:return "FstreamKeyword";
    case TokenKind::FutureKeyword:return "FutureKeyword";
    case TokenKind::Get_timeKeyword:return "Get_timeKeyword";
    case TokenKind::Has_virtual_destructorKeyword:return "Has_virtual_destructorKeyword";
    case TokenKind::HexKeyword:return "HexKeyword";
    case TokenKind::IgnoreKeyword:return "IgnoreKeyword";
    case TokenKind::ImaxstreamKeyword:return "ImaxstreamKeyword";
    case TokenKind::IncludesKeyword:return "IncludesKeyword";
    case TokenKind::Inner_productKeyword:return "Inner_productKeyword";
    case TokenKind::Ios_baseKeyword:return "Ios_baseKeyword";
    case TokenKind::IsalnumKeyword:return "IsalnumKeyword";
    case TokenKind::IsalphaKeyword:return "IsalphaKeyword";
    case TokenKind::IsdigitKeyword:return "IsdigitKeyword";
    case TokenKind::IsprintKeyword:return "IsprintKeyword";
    case TokenKind::IstreamKeyword:return "IstreamKeyword";
    case TokenKind::IteratorKeyword:return "IteratorKeyword";
    case TokenKind::Kill_dependencyKeyword:return "Kill_dependencyKeyword";
    case TokenKind::LimitesKeyword:return "LimitesKeyword";
    case TokenKind::ListKeyword:return "ListKeyword";
    case TokenKind::LocaleKeyword:return "LocaleKeyword";
    case TokenKind::Make_sharedKeyword:return "Make_sharedKeyword";
    case TokenKind::MapKeyword:return "MapKeyword";
    case TokenKind::Match_resultsKeyword:return "Match_resultsKeyword";
    case TokenKind::MaxKeyword:return "MaxKeyword";
    case TokenKind::MinKeyword:return "MinKeyword";
    case TokenKind::MismatchKeyword:return "MismatchKeyword";
    case TokenKind::MoveKeyword:return "MoveKeyword";
    case TokenKind::MultimapKeyword:return "MultimapKeyword";
    case TokenKind::MutexKeyword:return "MutexKeyword";
    case TokenKind::New_handlerKeyword:return "New_handlerKeyword";
    case TokenKind::Next_permutationKeyword:return "Next_permutationKeyword";
    case TokenKind::NothrowKeyword:return "NothrowKeyword";
    case TokenKind::Nth_elementKeyword:return "Nth_elementKeyword";
    case TokenKind::Numeric_limitsKeyword:return "Numeric_limitsKeyword";
    case TokenKind::OfstreamKeyword:return "OfstreamKeyword";
    case TokenKind::OptionalKeyword:return "OptionalKeyword";
    case TokenKind::OstringstreamKeyword:return "OstringstreamKeyword";
    case TokenKind::PairKeyword:return "PairKeyword";
    case TokenKind::Partial_sumKeyword:return "Partial_sumKeyword";
    case TokenKind::Priority_queueKeyword:return "Priority_queueKeyword";
    case TokenKind::Push_heapKeyword:return "Push_heapKeyword";
    case TokenKind::QueueKeyword:return "QueueKeyword";
    case TokenKind::Random_deviceKeyword:return "Random_deviceKeyword";
    case TokenKind::Range_errorKeyword:return "Range_errorKeyword";
    case TokenKind::RatioKeyword:return "RatioKeyword";
    case TokenKind::RegexKeyword:return "RegexKeyword";
    case TokenKind::Remove_referenceKeyword:return "Remove_referenceKeyword";
    case TokenKind::Replace_copyKeyword:return "Replace_copyKeyword";
    case TokenKind::Result_ofKeyword:return "Result_ofKeyword";
    case TokenKind::Reverse_copyKeyword:return "Reverse_copyKeyword";
    case TokenKind::Rotate_copyKeyword:return "Rotate_copyKeyword";
    case TokenKind::Runtime_errorKeyword:return "Runtime_errorKeyword";
    case TokenKind::SetKeyword:return "SetKeyword";
    case TokenKind::Shared_mutexKeyword:return "Shared_mutexKeyword";
    case TokenKind::Shared_ptrKeyword:return "Shared_ptrKeyword";
    case TokenKind::ShuffleKeyword:return "ShuffleKeyword";
    case TokenKind::StringstreamKeyword:return "StringstreamKeyword";
    case TokenKind::StackKeyword:return "StackKeyword";
    case TokenKind::Static_pointer_castKeyword:return "Static_pointer_castKeyword";
    case TokenKind::StreambufKeyword:return "StreambufKeyword";
    case TokenKind::StrstreamKeyword:return "StrstreamKeyword";
    case TokenKind::SwapKeyword:return "SwapKeyword";
    case TokenKind::System_errorKeyword:return "System_errorKeyword";
    case TokenKind::ThreadKeyword:return "ThreadKeyword";
    case TokenKind::TupleKeyword:return "TupleKeyword";
    case TokenKind::Type_infoKeyword:return "Type_infoKeyword";
    case TokenKind::Unique_ptrKeyword:return "Unique_ptrKeyword";
    case TokenKind::Unordered_mapKeyword:return "Unordered_mapKeyword";
    case TokenKind::Unordered_setKeyword:return "Unordered_setKeyword";
    case TokenKind::ValarrayKeyword:return "ValarrayKeyword";
    case TokenKind::VectorKeyword:return "VectorKeyword";
    case TokenKind::Void_tKeyword:return "Void_tKeyword";
    case TokenKind::VprintfKeyword:return "VprintfKeyword";
    default: return "";
    }
}